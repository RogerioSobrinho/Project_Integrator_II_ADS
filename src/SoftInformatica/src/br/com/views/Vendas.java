package br.com.views;

import br.com.model.Produto;
import br.com.model.Clientes;
import br.com.model.Venda;
import br.com.model.ItemDeVenda;
import br.com.controller.ServicoProduto;
import br.com.controller.ServicoCliente;
import br.com.controller.ServicoVenda;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author jorge.lrodrigues2
 */
public class Vendas extends javax.swing.JFrame {

     //Instância da tela de criação/edição de clientes

    private Vendas venda = null;
    private Clientes cliente = null;
    private ItemDeVenda itemVenda = null;
    private int totalPedido = 0;
    
    public Vendas() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        panel1 = new java.awt.Panel();
        label1 = new java.awt.Label();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtCPFPesquisa = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();

        jButton5.setText("Pesquisar");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Adicionar Item");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Realizar Venda");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Valor", "Quantidade"
            }
        ));
        jTable2.setEnabled(false);
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Qtde", "Valor"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jButton7.setText("Sair");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(254, 254, 254));

        label1.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        label1.setForeground(new java.awt.Color(0, 0, 0));
        label1.setText("Vendas");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta Produto"));

        jLabel3.setText("EAN");

        jTextField18.setEnabled(false);
        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });

        jLabel4.setText("Nome Produto");

        jTextField16.setEnabled(false);
        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });

        jButton6.setText("Pesquisar");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta Cliente"));

        try {
            txtCPFPesquisa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPFPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFPesquisaActionPerformed(evt);
            }
        });

        jLabel16.setText("CPF");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCPFPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCPFPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));

        jLabel1.setText("Total");

        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel2.setText("Quantidade");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField16ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //Fecha a janela
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Chama o método de pesquisa
        pesquisar();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(txtQuantidade.getText().isEmpty() || Integer.parseInt(txtQuantidade.getText()) == 0){
            JOptionPane.showMessageDialog(rootPane,
                  "É necessário informar a quantidade");
            return;
        }

        TableModel model1 = jTable2.getModel();
        int[] indexs = jTable2.getSelectedRows();
        Object[] row = new Object[4];
        
        if(Integer.parseInt(txtQuantidade.getText()) > Integer.parseInt(model1.getValueAt(indexs[0], 3).toString())){
            JOptionPane.showMessageDialog(rootPane,
                "Quantidade superior ao estoque do produto");
            return;
        }
        
        DefaultTableModel model2
                = (DefaultTableModel)jTable3.getModel();
        
        for(int i = 0; i < indexs.length; i++)
        {
            row [0] = model1.getValueAt(indexs[i], 0);
            row [1] = model1.getValueAt(indexs[i], 1);
            row [2] = Integer.parseInt(txtQuantidade.getText());
            row [3] = model1.getValueAt(indexs[i], 2);
            
            for(int j = 0; j < model2.getRowCount(); j++){
                if(model2.getValueAt(j,0) ==  row[0]) {
                    model2.removeRow(j);
                    return;
                }
            }
            
            model2.addRow(row);
        }
        
        //itemVenda.setProduto(resProduto.get(0));
        //itemVenda.setQtdProduto(Integer.parseInt(txtQuantidade.getText()));
        
        calculaTotalPedido();
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
         TableModel model1 = jTable3.getModel();
         itemVenda = new ItemDeVenda();
         Venda oVenda = new Venda();
         List<ItemDeVenda> listItemVenda = new ArrayList<ItemDeVenda>();
         
         for(int i = 0; i < model1.getRowCount(); i++ ){
             
                Produto resProduto = ServicoProduto.
                        obterProduto(Integer.parseInt(model1.getValueAt(i, 0).toString()));
                
                itemVenda.setProduto(resProduto);
                itemVenda.setQtdProduto(Integer.parseInt(model1.getValueAt(i, 2).toString()));
                listItemVenda.add(itemVenda);
         }
         
        oVenda.setCliente(cliente);
        oVenda.setItemVenda(listItemVenda);
        
        String resposta = null;
        
        resposta = ServicoVenda.registrarVenda(oVenda, Float.parseFloat(jFormattedTextField1.getText()));
        
        if(resposta == null){
            JOptionPane.showMessageDialog(rootPane,
                    "Venda Realizada com Sucesso!");
            
            limparTela();
        }else{
               JOptionPane.showMessageDialog(rootPane,
                    resposta,
                    "Alerta",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtCPFPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFPesquisaActionPerformed
        // TODO add your handling code here: 
        pesquisarCliente();
        
    }//GEN-LAST:event_txtCPFPesquisaActionPerformed

       private void pesquisarCliente() {

        //Realiza a pesquisa de clientes com o valor da caixa de pesquisa
        List<Clientes> listCliente = ServicoCliente.
                procurarCliente("", txtCPFPesquisa.getText());

        //Verifica se há resultados. Apenas atualiza o componente visual de
        //tabela com linhas de resultado caso haja resultados
        if (listCliente != null && listCliente.size() > 0) {
            habilitaVenda(true);
            cliente = listCliente.get(0);
            
        } else {

            //Caso a pesquisa não tenha retornado resultados, exibe uma mensagem
            //de erro ao usuário
            JOptionPane.showMessageDialog(rootPane,
                    "Cliente não cadastrado",
                    "Não há dados",
                    JOptionPane.ERROR_MESSAGE);

        }
    }
       
    public void habilitaVenda(boolean habilita){
        jTextField18.setEnabled(habilita);
        jTextField16.setEnabled(habilita);
        jButton6.setEnabled(habilita);
        jTable2.setEnabled(habilita);
        jButton2.setEnabled(habilita);
        jButton3.setEnabled(habilita);
    }
    
    public void calculaTotalPedido(){
         DefaultTableModel model2
                = (DefaultTableModel)jTable3.getModel();
         float soma = 0;
         for(int i = 0; i < model2.getRowCount(); i++){
             soma += Float.parseFloat(model2.getValueAt(i, 2).toString()) * Float.parseFloat(model2.getValueAt(i, 3).toString());
         }
         
         jFormattedTextField1.setText(String.valueOf(soma));
    }
    
    //Trata os cliques na tabela de resultados de pesquisa de clientes
    private void JTable2MouseClicked(java.awt.event.MouseEvent evt) {                                              
        //Verifica se o clique é um clique duplo       
        if (evt.getClickCount() == 2) {
            
            //Chama o método de alteração
            //alterar();
            
        }
    }   
    
    private void pesquisar() {

        //Realiza a pesquisa de clientes com o valor da caixa de pesquisa
        List<Produto> resultado = ServicoProduto.
                procurarProduto(jTextField16.getText(),"");

        //Obtém o elemento representante do conteúdo da tabela visual na tela
        DefaultTableModel model
                = (DefaultTableModel) jTable2.getModel();

        //Indica que a tabela deve excluir todos seus elementos
        //Isto limpará a lista, mesmo que a pesquisa não tenha sucesso
        //(afinal, o botão de pesquisa foi clicado, a pesquisa anterior
        //não deve continuar sendo exibida)
        model.setRowCount(0);

        //Verifica se há resultados. Apenas atualiza o componente visual de
        //tabela com linhas de resultado caso haja resultados
        if (resultado != null && resultado.size() > 0) {

            //Percorre a lista de resultados e os adiciona na tabela
            for (int i = 0; i < resultado.size(); i++) {

                //Obtém cada item da lista de resultados
                Produto cli = resultado.get(i);

                //Se há um cliente válido nesta posição da lista de resultados,
                //o adiciona na tabela
                if (cli != null) {

                    //Cria uma linha da tabela, que nada mais é que um array
                    //onde cada posição do array é uma coluna da linha da tabela
                    Object[] row = new Object[5];


                    row[0] = cli.getId();
                    row[1] = cli.getNome();
                    row[2] = cli.getPrecoVenda();
                    row[3] = cli.getQuantidade();


                    //Adiciona a linha na tabela
                    model.addRow(row);
                    
                }
                
            }

        } else {

            //Caso a pesquisa não tenha retornado resultados, exibe uma mensagem
            //de erro ao usuário
            JOptionPane.showMessageDialog(rootPane,
                    "Não há produtos para exibição",
                    "Não há dados",
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    private void limparTela(){
        txtCPFPesquisa.setText("");
        jTextField18.setText("");
        jTextField16.setText("");
        DefaultTableModel model1 = (DefaultTableModel) jTable2.getModel();
        model1.setRowCount(0);
        DefaultTableModel model2 = (DefaultTableModel) jTable3.getModel();
        model2.setRowCount(0);
        txtQuantidade.setText("");
        jFormattedTextField1.setText("");
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField18;
    private java.awt.Label label1;
    private java.awt.Panel panel1;
    private javax.swing.JFormattedTextField txtCPFPesquisa;
    private javax.swing.JFormattedTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
